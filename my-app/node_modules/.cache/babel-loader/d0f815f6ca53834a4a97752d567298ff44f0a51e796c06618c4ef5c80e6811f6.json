{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davyz\\\\Desktop\\\\LUMi\\\\my-app\\\\src\\\\components\\\\Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardContent, Typography, Snackbar, Alert, List, ListItem, ListItemText, Divider, Avatar } from '@mui/material';\n\n// Dummy data for tariffs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyTariffs = [{\n  time: '08:00 AM',\n  price: 0.12\n}, {\n  time: '12:00 PM',\n  price: 0.20\n}, {\n  time: '06:00 PM',\n  price: 0.30\n}, {\n  time: '10:00 PM',\n  price: 0.10\n}];\nfunction Notifications() {\n  _s();\n  const [highPriceTimes, setHighPriceTimes] = useState([]);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  useEffect(() => {\n    const checkTariffs = () => {\n      const highPrices = dummyTariffs.filter(tariff => tariff.price > 0.25); // Assuming price > $0.25 is high\n      if (highPrices.length > 0) {\n        setHighPriceTimes(highPrices);\n        setOpenSnackbar(true);\n      }\n    };\n    checkTariffs();\n\n    // Check every minute for updates\n    const interval = setInterval(checkTariffs, 60000);\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []);\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false);\n  };\n  const handleeCloseSnackbar = () => {\n    setOpenSnackbar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    open: openSnackbar,\n    autoHideDuration: 6000,\n    onClose: handleCloseSnackbar,\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      onClose: handleCloseSnackbar,\n      severity: \"warning\",\n      sx: {\n        width: '100%'\n      },\n      children: \"High electricity prices detected! Use solar energy!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(Notifications, \"pvCEHbz5AiZWX2699GVM919RoJY=\");\n_c = Notifications;\nexport default Notifications;\n\n//sell solar energy when I possess solar energy in excess\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardContent","Typography","Snackbar","Alert","List","ListItem","ListItemText","Divider","Avatar","jsxDEV","_jsxDEV","dummyTariffs","time","price","Notifications","_s","highPriceTimes","setHighPriceTimes","openSnackbar","setOpenSnackbar","checkTariffs","highPrices","filter","tariff","length","interval","setInterval","clearInterval","handleCloseSnackbar","handleeCloseSnackbar","open","autoHideDuration","onClose","children","severity","sx","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/davyz/Desktop/LUMi/my-app/src/components/Notifications.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Snackbar,\r\n  Alert,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  Avatar,\r\n} from '@mui/material';\r\n\r\n// Dummy data for tariffs\r\nconst dummyTariffs = [\r\n  { time: '08:00 AM', price: 0.12 },\r\n  { time: '12:00 PM', price: 0.20 },\r\n  { time: '06:00 PM', price: 0.30 },\r\n  { time: '10:00 PM', price: 0.10 },\r\n];\r\n\r\nfunction Notifications() {\r\n  const [highPriceTimes, setHighPriceTimes] = useState([]);\r\n  const [openSnackbar, setOpenSnackbar] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkTariffs = () => {\r\n      const highPrices = dummyTariffs.filter(tariff => tariff.price > 0.25); // Assuming price > $0.25 is high\r\n      if (highPrices.length > 0) {\r\n        setHighPriceTimes(highPrices);\r\n        setOpenSnackbar(true);\r\n      }\r\n    };\r\n\r\n    checkTariffs();\r\n\r\n    // Check every minute for updates\r\n    const interval = setInterval(checkTariffs, 60000);\r\n\r\n    return () => clearInterval(interval); // Cleanup on unmount\r\n  }, []);\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  const handleeCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n        <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n          <Alert onClose={handleCloseSnackbar} severity=\"warning\" sx={{ width: '100%' }}>\r\n            High electricity prices detected! Use solar energy!\r\n          </Alert>\r\n        </Snackbar>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n\r\n//sell solar energy when I possess solar energy in excess\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,QAAQ,EACRC,KAAK,EACLC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,OAAO,EACPC,MAAM,QACD,eAAe;;AAEtB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG,CACnB;EAAEC,IAAI,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAK,CAAC,EACjC;EAAED,IAAI,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAK,CAAC,EACjC;EAAED,IAAI,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAK,CAAC,EACjC;EAAED,IAAI,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAK,CAAC,CAClC;AAED,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd,MAAMuB,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,UAAU,GAAGV,YAAY,CAACW,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACV,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;MACvE,IAAIQ,UAAU,CAACG,MAAM,GAAG,CAAC,EAAE;QACzBP,iBAAiB,CAACI,UAAU,CAAC;QAC7BF,eAAe,CAAC,IAAI,CAAC;MACvB;IACF,CAAC;IAEDC,YAAY,CAAC,CAAC;;IAEd;IACA,MAAMK,QAAQ,GAAGC,WAAW,CAACN,YAAY,EAAE,KAAK,CAAC;IAEjD,OAAO,MAAMO,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,mBAAmB,GAAGA,CAAA,KAAM;IAChCT,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,MAAMU,oBAAoB,GAAGA,CAAA,KAAM;IACjCV,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACMT,OAAA,CAACR,QAAQ;IAAC4B,IAAI,EAAEZ,YAAa;IAACa,gBAAgB,EAAE,IAAK;IAACC,OAAO,EAAEJ,mBAAoB;IAAAK,QAAA,eACjFvB,OAAA,CAACP,KAAK;MAAC6B,OAAO,EAAEJ,mBAAoB;MAACM,QAAQ,EAAC,SAAS;MAACC,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAH,QAAA,EAAC;IAE/E;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEnB;AAACzB,EAAA,CApCQD,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAsCtB,eAAeA,aAAa;;AAE5B;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}