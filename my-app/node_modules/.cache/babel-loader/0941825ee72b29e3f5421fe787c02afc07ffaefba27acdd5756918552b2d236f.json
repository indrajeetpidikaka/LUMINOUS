{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davyz\\\\Desktop\\\\LUMI\\\\my-app\\\\src\\\\components\\\\TariffMonitor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardContent, Typography, CircularProgress, Button, TextField, Grid } from '@mui/material';\n\n// Dummy initial tariff data\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialTariffs = [{\n  id: 1,\n  time: '08:00 AM',\n  price: 0.12\n}, {\n  id: 2,\n  time: '12:00 PM',\n  price: 0.20\n}, {\n  id: 3,\n  time: '06:00 PM',\n  price: 0.30\n}, {\n  id: 4,\n  time: '10:00 PM',\n  price: 0.10\n}];\nfunction TariffMonitor() {\n  _s();\n  const [tariffs, setTariffs] = useState(initialTariffs);\n  const [loading, setLoading] = useState(true);\n  const [newPrices, setNewPrices] = useState({});\n  useEffect(() => {\n    // Simulate fetching real-time data\n    const fetchTariffs = () => {\n      setTimeout(() => {\n        setTariffs(initialTariffs); // Simulate fetching data\n        setLoading(false);\n      }, 1000);\n    };\n    fetchTariffs();\n\n    // Fetch new data every minute (if needed)\n    const interval = setInterval(fetchTariffs, 60000);\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []);\n  const handlePriceChange = id => {\n    if (newPrices[id] !== undefined) {\n      const updatedTariffs = tariffs.map(tariff => tariff.id === id ? {\n        ...tariff,\n        price: parseFloat(newPrices[id])\n      } : tariff);\n      setTariffs(updatedTariffs);\n      setNewPrices(prev => ({\n        ...prev,\n        [id]: ''\n      })); // Reset input field\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    style: {\n      marginBottom: '20px',\n      borderRadius: '8px'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        style: {\n          marginBottom: '20px',\n          textAlign: 'center',\n          fontWeight: 'bolder',\n          fontFamily: 'serif',\n          textTransform: 'uppercase'\n        },\n        children: \"Real-Time Tariff Monitoring\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: tariffs.map(tariff => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              style: {\n                padding: '10px',\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: tariff.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [\"Current Price: $\", tariff.price.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"New Price\",\n                variant: \"outlined\",\n                type: \"number\",\n                value: newPrices[tariff.id] || '',\n                onChange: e => setNewPrices(prev => ({\n                  ...prev,\n                  [tariff.id]: e.target.value\n                })),\n                style: {\n                  marginTop: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => handlePriceChange(tariff.id),\n                style: {\n                  marginTop: '10px'\n                },\n                children: \"Update Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, tariff.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(TariffMonitor, \"HV1sfXCN9YL9bEJo1TMsdaMQ5WY=\");\n_c = TariffMonitor;\nexport default TariffMonitor;\nvar _c;\n$RefreshReg$(_c, \"TariffMonitor\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardContent","Typography","CircularProgress","Button","TextField","Grid","jsxDEV","_jsxDEV","Fragment","_Fragment","initialTariffs","id","time","price","TariffMonitor","_s","tariffs","setTariffs","loading","setLoading","newPrices","setNewPrices","fetchTariffs","setTimeout","interval","setInterval","clearInterval","handlePriceChange","undefined","updatedTariffs","map","tariff","parseFloat","prev","variant","style","marginBottom","borderRadius","children","textAlign","fontWeight","fontFamily","textTransform","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","padding","toFixed","label","type","value","onChange","e","target","marginTop","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/davyz/Desktop/LUMI/my-app/src/components/TariffMonitor.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CircularProgress,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n} from '@mui/material';\r\n\r\n// Dummy initial tariff data\r\nconst initialTariffs = [\r\n  { id: 1, time: '08:00 AM', price: 0.12 },\r\n  { id: 2, time: '12:00 PM', price: 0.20 },\r\n  { id: 3, time: '06:00 PM', price: 0.30 },\r\n  { id: 4, time: '10:00 PM', price: 0.10 },\r\n];\r\n\r\nfunction TariffMonitor() {\r\n  const [tariffs, setTariffs] = useState(initialTariffs);\r\n  const [loading, setLoading] = useState(true);\r\n  const [newPrices, setNewPrices] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Simulate fetching real-time data\r\n    const fetchTariffs = () => {\r\n      setTimeout(() => {\r\n        setTariffs(initialTariffs); // Simulate fetching data\r\n        setLoading(false);\r\n      }, 1000);\r\n    };\r\n\r\n    fetchTariffs();\r\n    \r\n    // Fetch new data every minute (if needed)\r\n    const interval = setInterval(fetchTariffs, 60000);\r\n\r\n    return () => clearInterval(interval); // Cleanup on unmount\r\n  }, []);\r\n\r\n  const handlePriceChange = (id) => {\r\n    if (newPrices[id] !== undefined) {\r\n      const updatedTariffs = tariffs.map(tariff =>\r\n        tariff.id === id ? { ...tariff, price: parseFloat(newPrices[id]) } : tariff\r\n      );\r\n      setTariffs(updatedTariffs);\r\n      setNewPrices(prev => ({ ...prev, [id]: '' })); // Reset input field\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card variant=\"outlined\" style={{ marginBottom: '20px', borderRadius: '8px' }}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" style={{ marginBottom: '20px', textAlign: 'center',fontWeight: 'bolder', fontFamily: 'serif', textTransform: 'uppercase' }}>\r\n          Real-Time Tariff Monitoring\r\n        </Typography>\r\n        \r\n        {loading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <>\r\n            <Grid container spacing={2}>\r\n              {tariffs.map((tariff) => (\r\n                <Grid item xs={12} md={6} key={tariff.id}>\r\n                  <Card variant=\"outlined\" style={{ padding: '10px', textAlign: 'center' }}>\r\n                    <Typography variant=\"h6\">{tariff.time}</Typography>\r\n                    <Typography variant=\"body1\">Current Price: ${tariff.price.toFixed(2)}</Typography>\r\n                    \r\n                    <TextField \r\n                      label=\"New Price\" \r\n                      variant=\"outlined\" \r\n                      type=\"number\"\r\n                      value={newPrices[tariff.id] || ''}\r\n                      onChange={(e) => setNewPrices(prev => ({ ...prev, [tariff.id]: e.target.value }))}\r\n                      style={{ marginTop: '10px' }}\r\n                    />\r\n                    \r\n                    <Button \r\n                      variant=\"contained\" \r\n                      color=\"primary\" \r\n                      onClick={() => handlePriceChange(tariff.id)}\r\n                      style={{ marginTop: '10px' }}\r\n                    >\r\n                      Update Price\r\n                    </Button>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default TariffMonitor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}