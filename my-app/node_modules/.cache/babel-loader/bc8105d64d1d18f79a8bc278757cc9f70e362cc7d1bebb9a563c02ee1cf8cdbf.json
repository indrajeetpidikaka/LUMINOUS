{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davyz\\\\Desktop\\\\LUMI\\\\my-app\\\\src\\\\components\\\\Forecasting.js\",\n  _s = $RefreshSig$();\n// src/components/Forecasting.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Card, CardContent, Typography, TextField, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Forecasting() {\n  _s();\n  const [dataInput, setDataInput] = useState('');\n  const [prediction, setPrediction] = useState(null);\n  const handlePredict = async () => {\n    const dataArray = dataInput.split(',').map(Number);\n    const response = await axios.post('http://localhost:5001/predict', {\n      data: dataArray\n    });\n    setPrediction(response.data.prediction);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    style: {\n      marginBottom: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Forecasting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Input Data (comma-separated)\",\n        value: dataInput,\n        onChange: e => setDataInput(e.target.value),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handlePredict,\n        children: \"Get Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), prediction && /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Predicted Value: \", prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Forecasting, \"7Q0ZY/mEW+QUhPGpvoj0757QxJA=\");\n_c = Forecasting;\nexport default Forecasting;\nvar _c;\n$RefreshReg$(_c, \"Forecasting\");","map":{"version":3,"names":["React","useState","axios","Card","CardContent","Typography","TextField","Button","jsxDEV","_jsxDEV","Forecasting","_s","dataInput","setDataInput","prediction","setPrediction","handlePredict","dataArray","split","map","Number","response","post","data","variant","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","e","target","fullWidth","margin","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/davyz/Desktop/LUMI/my-app/src/components/Forecasting.js"],"sourcesContent":["// src/components/Forecasting.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, CardContent, Typography, TextField, Button } from '@mui/material';\r\n\r\nfunction Forecasting() {\r\n  \r\n  const [dataInput, setDataInput] = useState('');\r\n  const [prediction, setPrediction] = useState(null);\r\n\r\n  const handlePredict = async () => {\r\n    const dataArray = dataInput.split(',').map(Number);\r\n    \r\n    const response = await axios.post('http://localhost:5001/predict', {\r\n      data: dataArray,\r\n    });\r\n    \r\n    setPrediction(response.data.prediction);\r\n  };\r\n\r\n  return (\r\n    <Card variant=\"outlined\" style={{ marginBottom: '20px' }}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\">Forecasting</Typography>\r\n\r\n        <TextField \r\n          label=\"Input Data (comma-separated)\" \r\n          value={dataInput} \r\n          onChange={(e) => setDataInput(e.target.value)} \r\n          fullWidth \r\n          margin=\"normal\"\r\n        />\r\n        \r\n        <Button variant=\"contained\" color=\"primary\" onClick={handlePredict}>\r\n          Get Prediction\r\n        </Button>\r\n\r\n        {prediction && (\r\n          <Typography>Predicted Value: {prediction}</Typography>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Forecasting;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAErB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,SAAS,GAAGL,SAAS,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;IAElD,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,+BAA+B,EAAE;MACjEC,IAAI,EAAEN;IACR,CAAC,CAAC;IAEFF,aAAa,CAACM,QAAQ,CAACE,IAAI,CAACT,UAAU,CAAC;EACzC,CAAC;EAED,oBACEL,OAAA,CAACN,IAAI;IAACqB,OAAO,EAAC,UAAU;IAACC,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAO,CAAE;IAAAC,QAAA,eACvDlB,OAAA,CAACL,WAAW;MAAAuB,QAAA,gBACVlB,OAAA,CAACJ,UAAU;QAACmB,OAAO,EAAC,IAAI;QAAAG,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAEjDtB,OAAA,CAACH,SAAS;QACR0B,KAAK,EAAC,8BAA8B;QACpCC,KAAK,EAAErB,SAAU;QACjBsB,QAAQ,EAAGC,CAAC,IAAKtB,YAAY,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC9CI,SAAS;QACTC,MAAM,EAAC;MAAQ;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eAEFtB,OAAA,CAACF,MAAM;QAACiB,OAAO,EAAC,WAAW;QAACe,KAAK,EAAC,SAAS;QAACC,OAAO,EAAExB,aAAc;QAAAW,QAAA,EAAC;MAEpE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERjB,UAAU,iBACTL,OAAA,CAACJ,UAAU;QAAAsB,QAAA,GAAC,mBAAiB,EAACb,UAAU;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CACtD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX;AAACpB,EAAA,CAtCQD,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAwCpB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}