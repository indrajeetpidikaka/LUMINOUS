{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davyz\\\\Desktop\\\\LUMI\\\\my-app\\\\src\\\\components\\\\EnergyAnalytics.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Card, CardContent, Typography, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EnergyAnalytics() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [energyData, setEnergyData] = useState([]);\n  const [labels, setLabels] = useState([]);\n  useEffect(() => {\n    const fetchEnergyData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/energy-data'); // Ensure this URL matches your server\n        const data = response.data;\n\n        // Assuming the response has properties: timestamps and consumption values\n        setLabels(data.timestamps);\n        setEnergyData(data.consumption);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching energy data:\", error);\n        setLoading(false);\n      }\n    };\n    fetchEnergyData();\n\n    // Fetch new data every minute\n    const interval = setInterval(fetchEnergyData, 60000);\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []);\n  const chartData = {\n    labels: labels,\n    datasets: [{\n      label: 'Energy Consumption (kWh)',\n      data: energyData,\n      fill: false,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    style: {\n      marginBottom: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Energy Consumption Analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Line, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          style: {\n            marginTop: '10px'\n          },\n          children: \"This chart shows your energy consumption over time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(EnergyAnalytics, \"UbcM1QYZTg2lohGZslN6VVGtZVA=\");\n_c = EnergyAnalytics;\nexport default EnergyAnalytics;\nvar _c;\n$RefreshReg$(_c, \"EnergyAnalytics\");","map":{"version":3,"names":["React","useEffect","useState","Line","Card","CardContent","Typography","CircularProgress","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","EnergyAnalytics","_s","loading","setLoading","energyData","setEnergyData","labels","setLabels","fetchEnergyData","response","get","data","timestamps","consumption","error","console","interval","setInterval","clearInterval","chartData","datasets","label","fill","backgroundColor","borderColor","variant","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/davyz/Desktop/LUMI/my-app/src/components/EnergyAnalytics.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Card, CardContent, Typography, CircularProgress } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nfunction EnergyAnalytics() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [energyData, setEnergyData] = useState([]);\r\n  const [labels, setLabels] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchEnergyData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/energy-data'); // Ensure this URL matches your server\r\n        const data = response.data;\r\n\r\n        // Assuming the response has properties: timestamps and consumption values\r\n        setLabels(data.timestamps);\r\n        setEnergyData(data.consumption);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching energy data:\", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchEnergyData();\r\n    \r\n    // Fetch new data every minute\r\n    const interval = setInterval(fetchEnergyData, 60000);\r\n\r\n    return () => clearInterval(interval); // Cleanup on unmount\r\n  }, []);\r\n\r\n  const chartData = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: 'Energy Consumption (kWh)',\r\n        data: energyData,\r\n        fill: false,\r\n        backgroundColor: 'rgba(75,192,192,0.4)',\r\n        borderColor: 'rgba(75,192,192,1)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Card variant=\"outlined\" style={{ marginBottom: '20px' }}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\">Energy Consumption Analytics</Typography>\r\n        \r\n        {loading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <>\r\n            <Line data={chartData} />\r\n            <Typography variant=\"body2\" style={{ marginTop: '10px' }}>\r\n              This chart shows your energy consumption over time.\r\n            </Typography>\r\n          </>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default EnergyAnalytics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}